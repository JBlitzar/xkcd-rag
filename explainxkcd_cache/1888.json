{
    "comic_number": 1888,
    "explanation": "{{comic\n| number    = 1888\n| date      = September 11, 2017\n| title     = Still in Use\n| image     = still_in_use.png\n| titletext = 'Which one?' 'I dunno, it's your house. Just check each object.' 'Check it for *what*?' 'Whether it looks like it might have touched a paper towel at some point and then forgotten to let go.' '...' 'You can also Google to learn how to check which things are using which resources.' 'You know, I'll just leave the towel there and try again tomorrow.'\n}}\n\n==Explanation==\n[[Cueball]] is trying to remove the trash bag from his garbage can. However, the can refuses to let him do so, citing that a paper towel in the trash is being used by some object in his home.\n\nThis comic draws parallels between the act of emptying a physical rubbish bin and emptying the {{w|Trash (computing)|recycle bin}} integrated into a desktop computing environment like Windows, macOS, most Linux derivatives, and others. It originated with the {{w|Xerox Alto}}, but was first commercially introduced on {{w|Apple Lisa}} in 1982 called ''Wastebasket'' and, while it was adopted by most other desktop environment operating system, using slightly different names, the main purpose still remains: A user can restore a file after they have deleted it -- hence the most common name ''recycle bin'', you still can get your ''paper towel'' and use it again. In many (earlier) command line based systems like DOS or UNIX/Linux (besides the desktop interfaces) a removed file was gone. Some ''undelete'' commands exist, but there are hard restrictions because the then free space on the hard drive must not have been used again and often file names aren't fully recoverable.\n\nBut sometimes when attempting to delete files, a running program may still have the file marked as in use. The operating system will therefore prevent the file's deletion, but some do not tell the user which program is using the file.\n\nPreventing the file from being deleted from the file system in this case may be a correct behavior, because the document is still being worked on. But sometimes it may happen erroneously, perhaps because of a program not closing the file properly, a glitch in the operating system, or user error. The user then is required to find the cause of the problem and rectify it before the file can be deleted. This may be difficult because error messages may not reveal the affected file or the program blocking its removal. Similar problems may occur when unmounting (or \"safely removing\") a removable storage device.\n\nThe title text may refer to a simple solution to these sorts of problems: Wait a while, perhaps overnight, and see if the (unknown) application(s) have closed the open file(s). Alternatively, the user can shut down the system to make absolutely sure that nothing is using anything. This is usually effective and harmless -- programs that ''falsely'' flagged something in the recycle bin as \"in use\" usually won't recreate the problem when the computer finishes booting up -- but this is really not a convenient solution for the user because all applications are closed.\n\n== Solutions ==\nAdvanced users may be inconvenienced by unhelpful error messages but at least are likely to know the tools available to solve the problem. However, a less experienced user just trying to free some space is not only annoyed, their only solution is to reboot or shut down the computer.\n\nSome tools:\n* On Windows, the [https://docs.microsoft.com/en-us/sysinternals/downloads/handle \"handle\"] command line tool allows listing, searching, and closing file handles, showing the associated process.\n* On Linux and OS X there is a command line tool {{w|lsof}} (list open files) which also lists open sockets and more. If the filename or program name is known, the usefulness of this tool is vastly enhanced by combining it with {{w|grep}}.\n* Unix systems derived from SVR4 have the {{w|fuser (Unix)|fuser(1)}} command (fstat(1) on BSD) that lists and optionally kills the process keeping a file open. It's useful on shutdowns because open files can prevent unmounting filesystems, potentially leaving them a mess.\n\n==Transcript==\n:[Cueball is trying to take out a trash bag from his garbage can.]\n:Trash: Sorry, you can't empty the garbage yet. A paper towel in here is currently in use by some object in your house.\n\n{{comic discussion}}\n[[Category:Comics featuring Cueball]]\n[[Category:Computers]]"
}