{
    "comic_number": 138,
    "explanation": "{{comic\n| number    = 138\n| date      = August 7, 2006\n| title     = Pointers\n| image     = pointers.png\n| titletext = Every computer, at the unreachable memory address 0x-1, stores a secret. I found it, and it is that all humans arâ€”SEGMENTATION FAULT.\n}}\n\n== Explanation ==\nThis comic is about a play on the dual meaning of the word \"pointer.\" [[Cueball]] is playing a video game, but he seems to be stuck. So he asks [[Black Hat]] for a few tips (\"pointers\") to progress in the game. Black Hat is, as usual, annoying, so he spits out a couple of (seemingly random) 32-bit hexadecimal addresses, which are \"{{w|Pointer (computer programming)|pointers}}\" in a programming language. These pointers are used to access a certain location in the computer's memory in order to fulfill a task; however, this would not be helpful in improving his playing the game the normal way (though [[#Alternate Explanation|see below]]) by perhaps learning of a better weapon loadout, or a quicker route to achieve some mission goal. Ultimately, Cueball is then annoyed at [[Black Hat]] for not answering his question in a useful manner.\n\nA {{w|segmentation fault}}, as referred to in the title text, is a result by accessing invalid memory addresses. If you define a pointer to an invalid address, then try to access the memory location associated with it, you could end up with this exception. The hexadecimal address 0x-1 is definitely invalid, because it's out of range. If you treat pointers as signed numbers, it points below the lowest address, 0; if you treat them as unsigned (meaning the numbers wrap around, so -1 is the same as the highest address - 0xFFFFFFFF on a 32-bit system), if it's pointing at any object larger than a byte, most of that object is past the highest address. So, this is a \"hidden location,\" but as soon as you try to read more than one byte at that location, you will get a segfault. The title text states that Randall has found a secret value hidden at that location anyways, but before he can reveal its apparently-existential meaning, a segfault cuts him off to prevent him from doing so.\n\nThe ending letters of the pointers are spelling, reading top to bottom, the word ACE. As Cueball is playing a game, Black Hat could be additionally saying that he's an ace of the game. \n\n=== Alternate Explanation ===\nACE also stands for Arbitrary Code Execution. This is a class of glitches, often found in things like video games. Pointers are often used to cheat in games and do things like change the amount of money you have, and are usually necessary to achieve ACE, if Cueball was prepared and able to directly change the source-code, though there is insufficient detail given as to whether these are perhaps memory locations to change (to patch with different data values) or alternate data-pointers (to be placed somewhere unknown), either of which ''could'' change the game in ways that make it easier to play (such as making more bonus items available, or by removing confounding gameplay features).\n\nAn example would be if the first pointer was a location in memory the game accidentally ran code from during a common crash condition, that could be controlled by the player (like the number of items in their inventory, or the horizontal location of some Koopas earlier in the level), the second was an address for a jump, and the third was something much more controllable, like the input from the controller. A strategy like this has been used to achieve many effects in games like Super Mario World and Ocarina of Time. Examples would be credits warps (which would be much easier than playing the game, especially time-wise) or programing another game into the original game, which, while more complicated, might be used to program in an easier game.\n\nThe 'pointers' Black Hat tells him could also be cheat codes, which are 'sanctioned' methods of changing the gameplay. They are built into the normal game interface for testing purposes (perhaps accidentally left in, upon release) and/or provided as 'Easter Eggs' for the players to experience different levels of non-vanilla gameplay. If these are indeed useful cheat-codes, their complexity (and the fact that Black Hat can recite them verbatim without looking them up, presumably being very familiar with their use) would give an extra reason for Cueball to hate him.\n\n==Transcript==\n:[Cueball is playing a video game, with Black Hat standing behind him.]\n:Cueball: Man, I suck at this game. Can you give me a few pointers?\n:Black Hat: 0x3A28213A 0x6339392C, 0x7363682E.\n:Cueball: I hate you.\n\n==Trivia==\nIn ''[[xkcd: volume 0]]'', the pointers are different. They are, in order: 0x4B657932, 0x6F66383A, and 0x73CD4542.\n\n{{Comic discussion}}\n[[Category:Comics featuring Black Hat]]\n[[Category:Comics featuring Cueball]]\n[[Category:Puns]]\n[[Category:Video games]]\n[[Category:Programming]]"
}