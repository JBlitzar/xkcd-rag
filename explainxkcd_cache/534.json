{
    "comic_number": 534,
    "explanation": "{{comic\n| number    = 534\n| date      = January 23, 2009\n| title     = Genetic Algorithms\n| image     = genetic_algorithms.png\n| titletext = Just make sure you don't have it maximize instead of minimize.\n}}\n\n==Explanation==\nIn the {{w|computer science}} field of {{w|artificial intelligence}}, a {{w|genetic algorithm}} is a search {{w|Heuristic (computer science)|heuristic}} that mimics the process of {{w|Evolution|natural evolution}}. This heuristic is routinely used to generate useful solutions to optimization and search problems. Genetic algorithms belong to the larger class of evolutionary algorithms, which generate solutions to {{w|Mathematical optimization|optimization}} problems using techniques inspired by natural evolution, such as inheritance, mutation, selection, and crossover.\n\nIn particular, genetic algorithms are designed to evolve, with various mechanisms being used to mimic natural selection.  One such mechanism is to assign \"costs\" to various aspects of the program, and to select for programs which assess a {{w|fitness function}} such as calculating the least sum of all these costs (thus mimicking organisms in an environment where they have to compete for limited resources) versus any measurable benefits.\n\nThe line indicated by an arrow is a reference to the ''{{w|Terminator (franchise)|Terminator}}'' series, in which the main antagonist is an artificial intelligence known as {{w|Skynet (Terminator)|Skynet}} that seeks to destroy all humans. By setting an absurdly high cost for an algorithm transforming into Skynet, the coder makes a preventive measure against the algorithm achieving such sentience.\n\nThe line about water crossing is a possible reference to the old computer game ''{{w|The Oregon Trail (video game)|The Oregon Trail}}'', in which crossing water was hazardous. This video game was referenced again in [[623: Oregon]].\n\nThe title text refers to the method by which the program select the desired option, with minimizing being where the program seeks the lowest possible number, and maximizing where the program seeks the highest possible number. When dealing with cases such as generating profit, maximization would obviously be preferred over minimization; but selecting maximization here would be disastrous as it would always chose the BecomingSkynet option before any other due to its massive cost.\n\n==Transcript==\n:[Code displayed, presumably from an IDE.]\n:def getSolutionCosts(navigationCode):\n::fuelStopCost = 15\n::extraComputationCost = 8\n:[There is a giant arrow pointing to the next line.]\n::thisAlgorithmBecomingSkynetCost = 999999999\n::waterCrossingCost = 45\n:Genetic algorithms tip:\n:'''''Always''''' include this in your fitness function.\n\n{{comic discussion}}\n\n[[Category:Programming]]\n[[Category:Comics with color]]\n[[Category:Artificial Intelligence]]\n[[Category:Terminator]]"
}