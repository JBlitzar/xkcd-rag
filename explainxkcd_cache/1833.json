{
    "comic_number": 1833,
    "explanation": "{{comic\n| number    = 1833\n| date      = May 5, 2017\n| title     = Code Quality 3\n| image     = code_quality_3.png\n| titletext = It's like a half-solved cryptogram where the solution is a piece of FORTH code written by someone who doesn't know FORTH.\n}}\n\n==Explanation==\nThis comic is the third in the [[:Category:Code Quality|Code Quality series]]:\n* [[1513: Code Quality]]\n* [[1695: Code Quality 2]]\n* [[1833: Code Quality 3]]\n\nIn the first panel, Ponytail references {{w|query string|query strings}}, which store information, such as search queries or page numbers, relevant to the URL. Query strings are often not meant to be especially human-readable (eg. \"&sxsrf=APq-WBvn82l8oTeNNzZeCkI7B9nM5nxoVg%3A1647235405067\"), so a song based on one would likely not be a good one.\n\nA tactical flashlight is a light that can be mounted on a gun for use in low-light scenarios. (Some stores in online marketplaces may also call their flashlights \"tactical\" just to make them sound higher quality). They tend to be very durable and very bright. Different models have different features and capabilities, so they are given cool-sounding model numbers. [http://www.json.org/ JSON] (JavaScript Object Notation) is a subset of JavaScript used, by many programming languages, as a convenient way of recording structured data. It's not clear what else would be in the table (tables typically have more than one column) and JSON technically has arrays and objects (dictionaries) but not tables, but a JSON array of objects of these model numbers would look something like:\n\n  [\n    { \"model\": \"TACT X700\"},\n    { \"model\": \"Atomic Beam USA 5000\" },\n    { \"model\": \"E2D LED Defender\" },\n    { \"model\": \"J5 Tactical V1-Pro\" }\n  ]\n\n{{w|Alan Turing}} was a British theoretical computer scientist, often considered the father of the field. His [https://www.cs.virginia.edu/~robins/Turing_Paper_1936.pdf 1936 paper] outlined Turing machines, a theoretical model for computing, as well as computability and the halting problem. Theoretical computer science is very different from practical coding; understanding the contents of the paper would not at all help a coder to understand today's algorithms, design patterns, and best practices. This is not helped by a page of JavaScript example code. {{w|JavaScript}} is a popular programming language which makes web pages responsive to user inputs, and while JavaScript arguably solves the problem in a practical manner (as opposed to Turing's very theoretical work), it does get a lot of criticism - for instance it is {{w|Strong and weak typing|nearly untyped}}, which allows the programmer to do very interesting things, like {{w|JSFuck}}. Then, example code is used to explain a concept in programming or demonstrate how a program works, but it does not actually run on any computer. \"Guessing everything in between\" would involve attempting to write code using skills that could range anywhere from the most basic programming to Turing's extremely advanced ideas.\n\nIn the final panel, Ponytail references {{w|leet|leet-speak}}, in which symbols are replaced with similar-looking symbols, and a {{w|manifesto}}, a statement of a person or group's beliefs and intentions. A manifesto from a survivalist cult leader might be nonsensical, even before being translated to leet-speak. Memory allocation is a low-level computer programming concept; most modern languages have features that take care of memory allocation for the programmer, possibly implying that Cueball does not know how to use these features.\n\nAt this point Cueball, quickly becoming impatient with Ponytail's sass in what is supposed to be a formal code review, retorts that if she can't start giving him the constructive criticism that he's looking for, he can always find someone else to replace her. Ponytail smugly responds that nobody else would be able to stomach his code for more than one sitting, and that she's the only one he's got.\n\n{{w|Forth_(programming_language)#Programmer.27s_perspective|Forth}} is an old programming language that tends to be difficult to read. It is stack-based, meaning that values to be operated on are moved on a {{w|Stack (abstract data type)|stack}} before the operation to be performed is given. Using stacks can be considered different from programming languages that resemble natural human language (e.g. {{w|COBOL}}). While stack-based computing makes some problems very simple (for example, it is relatively simple to design a Forth compiler, or reversing the order of an array) and uses less computing resources, such programming languages are not easy to learn. Since Forth allows the programmer to rewrite the language, or define their own language, and it does not enforce restrictions like data types, it may be especially easy for novices to write cryptic code. A {{w|cryptogram}} is a cipher puzzle, generally one easy enough to be solved manually. The title text implies that the code is so bad that it looks like unreadable Forth code that is missing random characters.\n\n==Transcript==\n:[Ponytail sitting in front of a computer screen typing. Cueball speaks only off-panel, but since this is a direct continuation of comic 1513 and 1695: Code Quality and Code Quality 2 where Cueball is shown, there can be no doubt it is him.]\n:Ponytail: Your code looks like song lyrics written using only the stuff that comes after the question mark in a URL.\n:Cueball (off-panel): Sorry.\n:[Zoom in on Ponytail's upper body.]\n:Ponytail: It's like a JSON table of model numbers for flashlights with \"tactical\" in their names.\n:[Zoom out again. Ponytail has lifted her hands off the table and is slightly leaning back against the chair.]\n:Ponytail: Like you read Turing's 1936 paper on computing and a page of JavaScript example code and guessed at everything in between.\n:[Zoom in again on Ponytail's face.]\n:Ponytail: It's like a leet-speak translation of a manifesto by a survivalist cult leader who's for some reason obsessed with memory allocation.\n:Cueball (off-panel): I can get someone else to review my code.\n:Ponytail: Not more than once, I bet.\n\n{{comic discussion}}\n\n[[Category:Code Quality]]\n[[Category:Comics sharing name|Code Quality 03]]\n[[Category:Comics featuring Cueball]]\n[[Category:Comics featuring Ponytail]]\n[[Category:Programming]]\n[[Category:Computers]]\n[[Category:Cueball's computer problems]]"
}