{
    "comic_number": 2510,
    "explanation": "{{comic\n| number    = 2510\n| date      = September 1, 2021\n| title     = Modern Tools\n| image     = modern_tools.png\n| titletext = I tried to train an AI to repair my Python environment but it kept giving up and deleting itself.\n}}\n\n\n==Explanation==\n[[Cueball]] tells [[White Hat]] how he has trained a {{w|artificial neural network|neural net}} to generate mostly valid {{w|Make_(software)#Makefile|Makefiles}}. \n\nThis is the file type that {{w|Make (software)|Make}} searches for. In software development, Make is a build automation tool that automatically builds executable programs and libraries from source code by reading files called Makefiles which specify how to derive the target program. (See [[2173: Trained a Neural Net]]). Make is a very old tool, having first appeared in 1976. \n \nThen Cueball continues to tell that he next will train it to distinguish between Bash and Zsh. \n\n{{w|Bash (Unix shell)|Bash}} and {{w|Z_shell|Zsh}} are two {{w|Command-line_interface|command line interfaces}} for {{w|Unix-like}} OSes. The way to execute commands is almost identical, making detecting a script that contains a mixed syntax nearly impossible. This was previously referenced in [[1678: Recent Searches]]. Bash and Zsh are also old tools, having come out in 1989 and 1990 respectively.\n\nA human-designed 'random Makefile'-maker might have been written with this explicit choice amongst the earlier decisions in the generation process, but an AI might be assumed to have started (many, many generations ago) with something close to utter nonsense and painstakingly reached the stage of (mostly!) valid files along the way. Some might say that the differentiation training would have been better added at another point in the lengthy process.\n\nOn top of that, the current (mostly valid) results may even be {{w|Polyglot (computing)|polyglot}} and/or {{w|Agnostic (data)|shell-agnostic}}. Dependant upon the {{w|Fitness function|fitness tests}} in use, many other {{w|List of command-line interpreters|$SHELL}}-choices and Makefile styles may have been coevolved as valid (if rarer) subgenus of outputs, such as a ''command.com''-based makefile.\n\nIn the caption it states that Cueball is using modern tools to make ancient technology, as opposed to other people who use ancient tools and UIs ({{w|User interface}}) to develop Modern Tools.\n\nIn the title text Randall states that he tried to train an AI ({{w|Artificial intelligence}}) to repair [[1987: Python Environment|his horribly broken Python environment]]. But the AI kept giving up and deleting itself. The joke partly relates to when it or is not appropriate to personify goal-driven processes.  In the study of alignment of artificial intelligence, it is common to consider AIs finding ways to meet the tasks they are given that are highly unexpected, and then developing into an {{w|Instrumental_convergence#Paperclip_maximizer|apocalypse}}.  A common unexpected solution encountered in research is that the agent finds a way to disable itself as more efficient to meet its reward parameters than anything else it discovers, and then learns to repeatedly do so. The AI might be so intelligent that it had developed critical 'personal' opinions that led it to be so intellectually appalled by the task, or else just found it impossible to fix the Python environment and therefore justify its own existence, that it had no other recourse but to commit a form of suicide because Cueball's code was that bad ([[:Category:Code_Quality|which is a recurring theme for Cueball]]). [[Python]] has been a recurring subject as has [[:Category:Programming|Programming]] and [[:Category:Artificial Intelligence|Artificial Intelligence]].\n\nThe main joke is that Cueball is using cutting-edge tools to develop very old technologies, which is perhaps only useful if one is pursuing hobbies in conflict with a differing AI addiction. As the caption implies, it is much more common for people to use fundamental and well-established tools as the toolchain or building blocks of modern technology. A concrete example of this is writing scripts using decades-old Bash to automatically set up a significantly newer (2014) technology called {{w|Kubernetes}}.\n\n==Transcript==\n:[Cueball is sitting on an office chair at his desk typing on his laptop. White Hat is standing behind the desk looking at Cueball.]\n:Cueball: Okay, I've got this neural net generating mostly valid makefiles.\n:Cueball: Next I'm going to train it to distinguish between Bash and Zsh...\n\n:[Caption below the panel:]\n:People often use ancient tools and UIs to develop modern cutting-edge technology, but I do it the other way around.\n\n{{comic discussion}}\n\n[[Category:Comics featuring Cueball]]\n[[Category:Comics featuring White Hat]]\n[[Category:Programming]]\n[[Category:Artificial Intelligence]]"
}