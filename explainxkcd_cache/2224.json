{
    "comic_number": 2224,
    "explanation": "{{comic\n| number    = 2224\n| date      = November 4, 2019\n| title     = Software Updates\n| image     = software_updates.png\n| titletext = Everything is a cloud application; the ping times just vary a lot.\n}}\n\n==Explanation==\nAs time passes, upgrades to most products are inevitable, with software being no exception. However, as many updates create multiple versions, support for all of them can become a bit of a hassle for the company that creates them, so old versions frequently become unsupported after some years, or in some cases even months, of their releases.\n\n{{w|Software as a Service}} (SaaS) is a software licensing and delivery model in which software runs on the vendor's computers (servers), accessed by customers remotely. The software is said to run \"in the cloud\" as \"cloud applications\". Customers purchase subscription licenses. Since the only copy of the software is that which the vendor runs on their own computers, all customers use the one latest version of the software, which is upgraded whenever the vendor chooses to.\n\nThe benefits of SaaS is that the customer mostly does not have to worry about whether their machine is able to run the software, and both the vendor and customer only have to concern with managing one version instead of being familiar with multiple ones. The downside of SaaS, however, is that if the vendor alters or removes a feature that the customer prefers or requires, or introduces a bug, the customer has no ability to remain with an older version, losing a feature of the software that they depend on, or get impacted by a new bug that is introduced by an upgrade to the software with no ability to run the older version.\n\nThis downside of SaaS is frequently pointed out by skeptics of SaaS, who like to argue that the traditional purchase model allows the consumer to theoretically able to operate that version indefinitely; there is no obligation to pay ongoing fees or to upgrade to later versions. Indeed, some users do stay on old editions because of unfavorable changes in the newer versions, which is not something SaaS customers can do.\n\nRandall argues that in reality, though, because even these traditional pieces of software have versions and are equally susceptible to having a feature axed by the developer, as well as the problems of running increasingly old software - mainly concering bugs and later-discovered security vulnerabilities that would only be patched via upgrades, the practical upshot of these trends is that it's rarely plausible to buy a single copy of software and continue to run it indefinitely. Almost all consumers who continue to use a particular piece of software will eventually need to upgrade to and pay for new versions. While this isn't precisely the same as paying regular licensing fees and running software that automatically updates, it's an effectively similar model. In that sense, \"All software is Software as a Service\".\n\nThe title text refers to a different aspect of cloud applications. Since they run \"in the cloud\" on remote computers, they are subject to the limitations of network speed to the servers. The time for data to be sent to a server and a response to be received back is called the \"ping time\". \n\nSince a \"cloud server\" is just a computer, there is no fundamental difference between software running remotely and software running locally on a user's computer. The biggest difference is that software running locally will respond almost instantly to user input, whereas software running remotely may take longer to respond, since the data first needs to be sent over a network (the internet), processed, and then sent back to the user's computer. In addition, the chance of data loss (packet loss) may cause the response to be even slower, as data has to be re-sent, or often result in no response at all. Hence, in practice, this can have an enormous impact on the experience of using remote software vs software that runs locally (as anyone who has tried online gaming on a laggy server can attest). \n\nHowever, technically speaking, there is a nonzero time taken for the data to travel from the user's keyboard onto the computer, across the various circuitry, and back to the monitor. Hence there is a \"ping\" time even for a local computer (in fact, many \"gaming\" monitors advertise low input lag, in the order of 1-5 milliseconds, as a feature). Therefore, you could technically say that all applications are cloud applications, just that some (local computers) have very fast ping times whereas for others (servers on another continent) it may be quite slow. \n\nThis ignores the fact that being a \"cloud application\" implies that it runs on a server in a remote location. The joke is similar to the one that claims everyone commutes to work - including those that \"work from home\" - but their commute times just vary a lot. For example, consider the \"commute\" from your bedroom to your home office.\n\n==Transcript==\n:[A graph with two axes. Over and right of the axes are two labeled arrows pointing along the two axes:]\n:X-axis: Time \n:Y-axis: Software Version Number \n\n:[The graph consists of three lines. Two gray lines moves in upwards step from left to right. The upper line begins a bit up the Y-axis, the bottom line begins somewhat down the X-axis. From there both lines move upwards in steps of different height. The distance between them stays on average about the same for the entire graph, but moves from bottom to top of the graph. Labeled arrows point to the top and the bottom gray line. The area between them is shaded light gray and has a gray label written in the middle. The third line is black. It begins from a dot just under the second step in the upper gray line. This line also makes steps, keeping close to the upper line, although it makes fewer steps than that line. But a bit over halfway to the top, it stops stepping, staying on the same level for the rest of the graph; thus eventually it falls outside of the light gray area between the other two lines, where it had been until the bottom line stepped above it. This black line is also labeled, with normal black text written beneath the first full step inside the gray area. There is one other point labeled on the black line: a dot just after the final step, under the next large step in the upper gray line. At the end of the black line there are question marks with an arrow beneath pointing right. The arrow has a label to the left.]\n:Upper gray line: Newest Version\n:Bottom gray line: Oldest Supported Version\n:Light gray area: Support Zone\n:Black line: My current version\n:Start dot: First Install\n:Second dot: An update finally breaks a feature I'm unwilling to lose\n:End of black line: ??? \n:Arrow label: The Abyss\n\n:[Caption below the chart]:\n:All software is Software as a Service.\n\n{{comic discussion}}\n\n[[Category:Line graphs]]\n[[Category:Timelines]]\n[[Category:Software updates]]"
}